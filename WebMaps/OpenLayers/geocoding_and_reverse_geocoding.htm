<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <title>Prueba de OSM y GMaps</title>
    <link rel="stylesheet" href="http://openlayers.org/api/2.12/theme/default/style.css" type="text/css" />
    <link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/themes/ui-lightness/jquery-ui.css" type="text/css" media="all" />

    <!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    
    <style>
        .smallmap {
            width: 512px;
            height: 256px;
            border: 1px solid #ccc;
        }
        #toolbar {
            padding: 10px 4px;
            font-size: 0.8em;
        }
        #toolbarWraper { margin-top: 10px; margin-bottom: 10px; }
        #location { display: none }
        #searchResult { display: none; width: 492px; padding: 10px; font-size: 10px; }
        #addressList { width: 100%; }
    </style>
</head>
<body>
        <h1 id="title">Prueba de OpenLayers con Google y OSM</h1> 
        <div id="toolbarWraper">
        <span id="toolbar" class="ui-widget-header ui-corner-all">
	        <input type="checkbox" id="locate" /><label for="locate">Locate</label>
            <button type="button" id="search">Buscar</button>
            <input id="location" type="text" />
	        <button type="button" id="clear">Limpiar</button>
	    </span>
        </div>
        <div id="map" class="smallmap">
        </div>
        <div id="searchResult" class="ui-widget-content ui-corner-all">            
            <select id="addressList" size="4">
                <option></option>
            </select>
            <hr />
            <button type="button" id="goTo" onclick="gotoSelectedAddress()">Ir a direcci√≥n</button>
            <button type="button" id="close" onclick="closeSearchResult()">Cerrar</button>
        </div>
    
    <script src="http://maps.google.com/maps/api/js?v=3&sensor=false" type="text/javascript"></script>
    <script src="http://openlayers.org/api/2.12/OpenLayers.js" type="text/javascript"></script> 
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js" type="text/javascript"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
    <script>
        jQuery.support.cors = true;

        OpenLayers.Control.Click = OpenLayers.Class(OpenLayers.Control, {
            defaultHandlerOptions: {
                'single': true,
                'double': false,
                'pixelTolerance': 0,
                'stopSingle': false,
                'stopDouble': false
            },

            initialize: function (options) {
                this.handlerOptions = OpenLayers.Util.extend(
                        {}, this.defaultHandlerOptions
                    );
                OpenLayers.Control.prototype.initialize.apply(
                        this, arguments
                    );
                this.handler = new OpenLayers.Handler.Click(
                        this, {
                            'click': this.trigger
                        }, this.handlerOptions
                    );
            },

            trigger: function (e) {
                if ($('#locate').is(':checked')) {
                    var lonlat = map.getLonLatFromViewPortPx(e.xy);
                    showReverseGeocode(lonlat);
                }
            }

        });

        var map;
        var osm;
        var gmap;
        var bmap;
        var mrk;
        var bbx; 
        var size = new OpenLayers.Size(21,25);
        var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
        var icon = new OpenLayers.Icon('http://www.openlayers.org/api/2.12/img/marker.png', size, offset);
        var jsonFormatter = new OpenLayers.Format.JSON();

        var AutoSizeFramedCloudMinSize = OpenLayers.Class(
            OpenLayers.Popup.FramedCloud, {
                'autoSize': true,
                'maxSize': new OpenLayers.Size(400, 400),
                'anchor': icon
            });

        function t(lonlat, reverse) {
            if (arguments.length == 1)
                return lonlat.clone().transform(map.displayProjection, map.getProjectionObject());
            else
                return lonlat.clone().transform(map.getProjectionObject(), map.displayProjection);
        }

        function addMarker(ll, popupClass, popupContentHTML, closeBox, overflow, iconUrl) {

            var feature = new OpenLayers.Feature(mrk, ll);
            feature.closeBox = closeBox;
            feature.popupClass = popupClass;
            feature.data.popupContentHTML = popupContentHTML;
            feature.data.overflow = (overflow) ? "auto" : "hidden";
            if (iconUrl != undefined && iconUrl != '' && iconUrl != "undefined") {
                feature.data.icon = new OpenLayers.Icon(iconUrl, size, offset);
            }
            else {
                feature.data.icon = icon.clone();
            }

            var marker = feature.createMarker();

            var markerClick = function (evt) {
                if (this.popup == null) {
                    this.popup = this.createPopup(this.closeBox);
                    map.addPopup(this.popup);
                    this.popup.show();
                } else {
                    this.popup.toggle();
                }
                currentPopup = this.popup;
                OpenLayers.Event.stop(evt);
                return false;
            };
            marker.events.register("mousedown", feature, markerClick);
            mrk.addMarker(marker);
            return marker;
        }

        function displayRgeo(lonlat, info) {
            var marker = new OpenLayers.Marker(lonlat, icon.clone());
            var popup = new OpenLayers.Popup(
                lonlat.toShortString(),
                lonlat,
                new OpenLayers.Size(200, 200),
                info,
                true
            );

            marker.events.register('mousedown', marker, function (evt) { popup.show(); OpenLayers.Event.stop(evt); });
            mrk.addMarker(marker);
            map.addPopup(popup);
        }

        function showReverseGeocode(lonlat) {
            var ll = t(lonlat, true);
            var zoom = map.getZoom();
            if (zoom > 12)
                zoom = 18;
            $.getJSON("http://nominatim.openstreetmap.org/reverse?format=json&addressdetails=1&accept-language=es&zoom=" + zoom + "&lat=" + ll.lat + "&lon=" + ll.lon + "&json_callback=?",
                function (response) { showReverseSuccess(lonlat, response); }
            );
        }

        function showReverseSuccess(lonlat, response) {
            addMarker(lonlat, AutoSizeFramedCloudMinSize, response.display_name, true, true, '');
        }

        function initMap() {
            map = new OpenLayers.Map({
                div: "map",
                //allOverlays: true,
                projection: new OpenLayers.Projection("EPSG:900913"),
                displayProjection: new OpenLayers.Projection("EPSG:4326"),
                units: "m",
                numZoomLevels: 20,
                maxResolution: 156543.0339,
                maxExtent: new OpenLayers.Bounds(-20037508, -20037508, 20037508, 20037508.34)
            });

            osm = new OpenLayers.Layer.OSM();
            gmap = new OpenLayers.Layer.Google("Google Streets", { visibility: false, sphericalMercator: true, numZoomLevels: 20 });
            mrk = new OpenLayers.Layer.Markers("Marcadores");
            bbx = new OpenLayers.Layer.Vector("Zonas");

            map.addLayers([osm, gmap, bbx, mrk]);
            map.addControls([new OpenLayers.Control.LayerSwitcher(), new OpenLayers.Control.MousePosition()]);
            map.setCenter(t(new OpenLayers.LonLat(-3.685627, 40.416711)), 12);
            var click = new OpenLayers.Control.Click();
            map.addControl(click);
            click.activate();
            addMarker(t(new OpenLayers.LonLat(-3.685627, 40.416711)), AutoSizeFramedCloudMinSize, "Retiro", true, true, '');
        }

        function clearMap() {
            bbx.removeAllFeatures();
            mrk.clearMarkers();
            map.popups = [];
        }

        function initToolbar() {
            $('button[type="button"]').button();
            $("#locate").button({
                text: false,
                icons: {
                    primary: "ui-icon-flag",
                    secondary: "ui-icon-plus"
                },
                attr: { checked: false }
            })
            .click(function () {
                var options;
                if ($(this).is(':checked')) {
                    options = {
                        icons: {
                            primary: "ui-icon-flag",
                            secondary: "ui-icon-cancel"
                        }
                    };
                } else {
                    options = {
                        icons: {
                            primary: "ui-icon-flag",
                            secondary: "ui-icon-plus"
                        }
                    };
                }
                $(this).button("option", options);
            });
            $("#search").button({
                text: false,
                icons: {
                    primary: "ui-icon-search"
                }
            })
            .click(function () { $('#location').animate({ width: 'toggle' }); });
            $("#clear").button({
                text: false,
                icons: {
                    primary: "ui-icon-trash"
                }
            }).click(clearMap);
            $('#location').keypress(location_onkeypress);
        }

        function searchAddress(address) {
            $.getJSON("http://nominatim.openstreetmap.org/search?&format=json&polygon=1&addressdetails=1&polygon=0&accept-language=es&q=" +  encodeURI(address) + "&json_callback=?",
                function (response) {
                    switch (response.length) {
                        case 0:
                            alert('No se encontr√≥ la direcci√≥n indicada.');
                            break;
                        case 1:
                            var pos = response[0];
                            var ll = t(new OpenLayers.LonLat(pos.lon, pos.lat));
                            addMarker(ll, AutoSizeFramedCloudMinSize, pos.display_name, true, true, pos.icon);
                            map.setCenter(ll);
                            break;
                        default:
                            showFoundAddress(response);
                            break;
                    }           
                }
            );
        }

        function showFoundAddress(addressInfo) {
            var addressList = document.getElementById("addressList");
            $('#addressList').empty();
            addressList.options;
            for (var i = 0; i < addressInfo.length; i++) {
                var address = addressInfo[i];
                var option = document.createElement("option");
                option.value = jsonFormatter.write(address);
                option.text = address.display_name;
                addressList.add(option, null);
            }
            $("#searchResult").slideDown();
        }

        function closeSearchResult() {
            $("#searchResult").slideUp();
        }

        function gotoSelectedAddress() {
            var addressList = document.getElementById("addressList");
            var selectedOption = addressList.options[addressList.selectedIndex];
            var addressInfo = jsonFormatter.read(selectedOption.value);
            var lonlat = t(new OpenLayers.LonLat(addressInfo.lon, addressInfo.lat));
            addMarker(lonlat, AutoSizeFramedCloudMinSize, selectedOption.text, true, true, addressInfo.icon);
            addBoundingBox(addressInfo.boundingbox);
            map.setCenter(lonlat);
            closeSearchResult();
        }

        function addBoundingBox(boundingbox) {
            var point1 = t(new OpenLayers.LonLat(boundingbox[2], boundingbox[0]));
            var point2 = t(new OpenLayers.LonLat(boundingbox[3], boundingbox[1]));
            var bb = new OpenLayers.Feature.Vector(
                new OpenLayers.Bounds(point1.lon, point1.lat, point2.lon, point2.lat).toGeometry());
            bbx.addFeatures([bb]);
        }

        function requestFailure(jqXHR, textStatus, errorThrown) {
            alert("Ocurri√≥ un error comunic√°ndose con el servicio. Por favor, int√©ntelo m√°s tarde. Detalles: " + errorThrown);
        }

        function location_onkeypress(e) {
            if (e.which == 13) {
                searchAddress($('#location').val());
                $("#search").button().click();
            }
        }

        function init() {
            initToolbar();
            initMap();
        }
        
        $(init);
    </script>
</body>
</html>
